{"version":3,"sources":["webpack://AdaptiveCards/webpack/universalModuleDefinition","webpack://AdaptiveCards/webpack/bootstrap","webpack://AdaptiveCards/./src/enums.ts","webpack://AdaptiveCards/./src/shared.ts","webpack://AdaptiveCards/./src/utils.ts","webpack://AdaptiveCards/./src/host-config.ts","webpack://AdaptiveCards/./src/adaptivecards.ts","webpack://AdaptiveCards/./src/card-elements.ts","webpack://AdaptiveCards/./src/text-formatters.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ActionStyle","Default","Positive","Destructive","Size","SizeUnit","TextSize","TextWeight","FontType","Spacing","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","FillMode","ActionIconPlacement","InputTextStyle","InputValidationNecessity","ContainerStyle","Emphasis","Accent","Good","Attention","Warning","ValidationError","ContainerFitStatus","Enums","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","this","_isProcessed","_original","_processed","getReferencedInputs","inputs","referencedInputs","Error","_i","inputs_1","length","input","RegExp","id","exec","substituteInputValues","contentType","matches","regEx","matchedInput","_a","keys","toLowerCase","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","getOriginal","set","SpacingDefinition","top","right","bottom","left","PaddingDefinition","None","SizeAndUnit","physicalSize","unit","parse","requireUnitSpecifier","result","Weight","expectedMatchCount","parseInt","Pixel","UUID","generate","d0","Math","random","d1","d2","d3","lut","initialize","toString","Shared","getValueOrDefault","obj","defaultValue","isNullOrEmpty","getEnumValue","targetEnum","stringToCssColor","color","a","findNextCharacter","html","currIdx","generateUniqueId","getStringValue","undefined","appendChild","node","child","setProperty","target","propertyName","propertyValue","setEnumProperty","enumType","targetValue","canDeleteTarget","getBoolValue","parseHostConfigEnum","renderSeparation","hostConfig","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","className","makeCssClassName","Horizontal","style","paddingTop","marginBottom","borderBottom","lineColor","height","paddingLeft","marginRight","borderRight","width","overflow","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","results","push","findBreakableIndices","lo","hi","bestBreakIdx","mid","floor","getFitStatus","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","Utils","ColorDefinition","defaultColor","subtleColor","default","subtle","TextColorDefinition","_super","_this","apply","arguments","highlightColors","__extends","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","toJSON","MediaConfig","allowInlinePlayback","defaultPoster","FactTextDefinition","size","isSubtle","weight","wrap","getDefaultWeight","FactTitleDefinition","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","iconPlacement","LeftOfTitle","allowTitleToWrap","iconSize","sizeAndUnit","e","ColorSetDefinition","dark","light","accent","good","warning","attention","parseSingleColor","ContainerStyleDefinition","foregroundColors","backgroundColor","highlightBackgroundColor","highlightForegroundColor","BuiltInContainerStyleDefinition","ContainerStyleSet","_allStyles","customStyleArray","Array","isArray","customStyleArray_1","customStyle","styleName","forEach","isBuiltIn","emphasis","customStyles","getStyleByName","Version","major","minor","_isValid","_major","_minor","versionString","errors","_versionString","error","InvalidPropertyValue","message","compareTo","otherVersion","isValid","HostCapabilities","capabilities","setCapability","version","json","name_1","jsonVersion","hasCapability","areAllMet","hostCapabilities","capabilityName","FontTypeDefinition","fontFamily","fontSizes","small","medium","large","extraLarge","fontWeights","lighter","bolder","monospace","FontTypeSet","getStyleDefinition","Monospace","HostConfig","choiceSetInputValueSeparator","supportsInteractivity","fontTypes","padding","imageSizes","containerStyles","actions","adaptiveCard","imageSet","media","factSet","cssClassNamePrefix","String","_legacyFontType","lineHeights","getFontTypeDefinition","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","paddingDefinitionToSpacingDefinition","paddingDefinition","makeCssClassNames","classNames","classNames_1","join","__export","InstanceCreationErrorType","TextFormatters","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","createCardObjectInstance","parent","forbiddenTypeNames","allowFallback","createInstanceCallback","createValidationErrorCallback","tryToFallback","typeName","indexOf","raiseParseError","ForbiddenType","setParent","shouldFallback","UnknownType","fallback","setShouldFallback","createActionInstance","AdaptiveCard","actionTypeRegistry","createInstance","errorType","UnknownActionType","ActionTypeNotAllowed","createElementInstance","elementTypeRegistry","UnknownElementType","ElementTypeNotAllowed","SerializableObject","_rawProperties","enableFullJsonRoundTrip","setCustomProperty","getCustomProperty","ValidationFailure","cardObject","ValidationResults","allIds","failures","getFailureIndex","addFailure","failure","index","CardObject","internalValidateProperties","context","DuplicateId","validateProperties","CardElement","_shouldFallback","_lang","_hostConfig","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","requires","horizontalAlignment","customCssSelector","minPixelHeight","internalRenderSeparator","separatorOrientation","updateRenderedElementVisibility","displayMode","isDesignMode","isVisible","display","isFirstElement","hideElementDueToOverflow","visibility","raiseElementVisibilityChangedEvent","showElementHiddenDueToOverflow","handleOverflow","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","createPlaceholderElement","border","minHeight","fontSize","innerText","adjustRenderedElementSize","renderedElement","flex","overrideInternalRender","internalRender","applyPadding","separatorElement","alwaysBleedSeparators","isBleeding","getImmediateSurroundingPadding","physicalPadding","marginLeft","getDefaultPadding","getHasBackground","getPadding","setPadding","asString","getEffectiveStyle","defaultStyle","getForbiddenElementTypes","getForbiddenActionTypes","processTop","processRight","processBottom","processLeft","doProcessTop","isTopElement","doProcessRight","isRightMostElement","doProcessBottom","isBottomElement","doProcessLeft","isLeftMostElement","effectivePadding","getEffectivePadding","card","getRootElement","onParseElementHandler","onParseElement","raiseParseElementEvent","jsonSeparation","Deprecated","jsonHeight","supportsMinHeight","jsonMinHeight","getActionCount","getActionAt","remove","CardElementContainer","removeItem","render","classList","add","boxSizing","updateLayout","processChildren","cardElement","rootElement","designMode","isRendered","offsetHeight","isLastElement","isAtTheVeryLeft","isAtTheVeryRight","isAtTheVeryTop","isAtTheVeryBottom","isBleedingAtTop","isBleedingAtBottom","getParentContainer","currentElement","Container","getAllInputs","getResourceInformation","getElementById","getActionById","allowCustomPadding","lang","defaultHostConfig","useAdvancedCardBottomTruncation","BaseTextBlock","_selectAction","fontType","getEffectiveStyleDefinition","getFontSize","getColorDefinition","colorSet","Dark","Light","setText","_text","text","applyStylesTo","targetElement","fontWeight","colorDefinition","effectiveColor","Lighter","sizeString","weightString","TextBlock","_processedText","_treatAsPlainText","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","getRenderedDomElementType","selectAction","onclick","preventDefault","cancelBubble","execute","tabIndex","setAttribute","formattedText","formatText","allowMarkForTextHighlighting","markdownProcessingResult","applyMarkdown","didProcess","outputHtml","markStyle","effectiveStyle","firstElementChild","HTMLElement","marginTop","textOverflow","lastElementChild","anchors","getElementsByTagName","anchor","onAnchorClickedHandler","onAnchorClicked","wordWrap","whiteSpace","useAdvancedTextBlockTruncation","parentContainer","isRtl","Center","textAlign","Right","Label","forElementId","htmlFor","TextRun","italic","strikethrough","highlight","href","getHref","fontStyle","textDecoration","ShowCardAction","JsonTypeName","RichTextBlock","_inlines","internalAddInline","inline","forceAdd","isInline","jsonInline","textRun","jsonInlines","getInlineCount","getInlineAt","addInline","removeInline","splice","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","fact","jsonFacts","Image","Auto","pixelWidth","pixelHeight","altText","parseDimension","applySize","Stretch","url","alignItems","onkeypress","keyCode","justifyContent","imageElement","onload","raiseImageLoadedEvent","onerror","errorElement","minWidth","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","mimeType","isElementAllowed","forbiddenElementTypes","isInteractive","forbiddenElementTypes_1","forbiddenElementType","paddingRight","paddingBottom","getSelectAction","setSelectAction","isSelectable","getItemCount","item","getItemAt","InteractivityNotAllowed","concat","ImageSet","_images","flexWrap","renderedImage","margin","getFirstVisibleRenderedItem","getLastVisibleRenderedItem","itemIndex","images","image","jsonImages","addImage","MediaSource","Media","sources","getPosterUrl","poster","processSources","_selectedSources","_selectedMediaType","source","mimeComponents","split","supportedMediaTypes","renderPoster","posterRootElement","position","posterUrl","posterImageElement_1","parentNode","removeChild","playButtonOuterElement","mediaPlayerElement","renderMediaPlayer","play","onPlay","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","controls","preload","type","jsonSources","serializedSources","mediaSource","InputValidationOptions","necessity","Optional","errorMessage","Input","validation","_renderedInputControlElement","_inputControlContainerElement","_outerContainerElement","flexDirection","isNullable","RequiredWithVisualCue","valueChanged","onInputValueChangedHandler","resetValidationFailureCue","onValueChanged","onInputValueChanged","useBuiltInInputValidation","_errorMessageElement","showValidationErrorMessage","displayInputValidationErrors","textContent","parseInputValue","PropertyCantBeNull","validateValue","jsonValidation","_defaultValue","TextInput","isMultiline","Text","textareaElement","placeholder","maxLength","oninput","inlineAction","inputElement","renderedInputControl","button_1","iconUrl","icon_1","removeProperty","inputControlContainerElement","_inlineAction","renderedInputControlElement","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","onchange","label","useMarkdownInRadioButtonAndCheckbox","labelElement","spacerElement","Choice","ChoiceSetInput","choices","isCompact","isMultiSelect","getUniqueCategoryName","uniqueCwtegoryName","uniqueCategoryCounter","defaultValues","_toggleInputs","i_2","checkboxInput","compoundInput","_selectElement","option","selected","disabled","hidden","option_1","uniqueCategoryName","i_1","radioInput","choice","CollectionCantBeEmpty","choiceArray","selectedIndex","NumberInput","_numberInputElement","min","max","_min","_max","DateInput","_dateInputElement","ActionButtonState","TimeInput","_timeInputElement","test","ActionButton","parentContainerStyle","_state","Normal","onClick","_parentContainerStyle","updateCssStyle","Expanded","Subdued","_b","alignment","click","Action","_actionCollection","setCollection","actionCollection","addCssClasses","internalGetReferencedInputs","allInputs","internalPrepareForExecution","internalValidateInputs","ignoreInputValidation","baseCssClass","buttonElement","hasTitle","titleElement","AboveTitle","iconElement","onExecuteActionHandler","onExecute","onExecuteAction","prepareForExecution","onParseActionHandler","onParseAction","raiseParseActionEvent","removeAction","validateInputs","SubmitAction","_isPrepared","_ignoreInputValidation","allInputs_1","_originalData","_processedData","data","OpenUrlAction","ToggleVisibilityAction","targetElements","elementId","jsonTargetElements","jsonTargetElements_1","jsonElementId","addTargetElement","removeTargetElement","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","header","method","headers","body","jsonHeaders","httpHeader","InlineAdaptiveCard","jsonCard","ActionCollection","owner","_expandedAction","_renderedActionCount","_actionCard","items","buttons","_owner","refreshContainer","_actionCardContainer","layoutChanged","hideActionCard","previouslyExpandedAction","raiseInlineCardExpandedEvent","showActionCard","suppressStyle","raiseEvent","renderedCard","collapseExpandedAction","state","expandShowCardAction","actionClicked","actionButton","Popup","findActionButton","clear","json_1","jsonAction","addAction","TooManyActions","buttonStrip","ab","spacer","buttonStripContainer","expandedAction","actionIndex","ActionSet","renderedActionCount","jsonOrientation","StylableCardElementContainer","_style","_bleed","applyBackground","styleDefinition","surroundingPadding","currentElementHasBackgroundImage","backgroundImage","hasExplicitStyle","getHasExpandedAction","getBleed","setBleed","BackgroundImage","fillMode","defaultFillMode","defaultHorizontalAlignment","verticalAlignment","defaultVerticalAlignment","reset","Repeat","RepeatHorizontally","RepeatVertically","Cover","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","Top","_items","_renderedItems","verticalContentAlignment","rtl","insertItemAt","forceInsert","isStandalone","supportsExcplitiHeight","getItemsCollectionPropertyName","dir","placeholderElement","boundary","handleElement","elt","maxHeight_1","elements","bleed","firstRenderedItem","lastRenderedItem","jsonBackgroundImage","addItem","insertItemBefore","insertBefore","insertItemAfter","insertAfter","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","ColumnSet","_columns","createColumnInstance","_renderedColumns","totalWeight","column","_c","computedWeight","renderedColumn","columns","getCount","getColumnAt","jsonColumns","weightedColumns","stretchedColumns","Hint","addColumn","onImageLoadedHandler","onImageLoaded","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","shouldUpdateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","onParseError","ContainerWithActions","renderedActions","renderIfEmpty","TypeRegistry","findTypeRegistration","registerType","registrationInfo","unregisterType","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","_fallbackCard","onProcessMarkdown","console","warn","isVersionSupported","bypassVersionCheck","currentVersion","fallbackText","speak","MissingCardType","UnsupportedCardVersion","langId","fallbackElement","removeAttribute","AbstractTextFormatter","regularExpression","_regularExpression","format","internalFormat","DateFormatter","date","Date","toLocaleDateString","day","weekday","month","year","TimeFormatter","toLocaleTimeString","hour","minute","formatters"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AdaptiveCards\"] = factory();\n\telse\n\t\troot[\"AdaptiveCards\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport class ActionStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Positive = \"positive\";\r\n    static readonly Destructive = \"destructive\";\r\n}\r\n\r\nexport enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum FontType {\r\n    Default,\r\n    Monospace\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum FillMode {\r\n    Cover,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\nexport enum InputValidationNecessity {\r\n    Optional,\r\n    Required,\r\n    RequiredWithVisualCue\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Emphasis = \"emphasis\";\r\n    static readonly Accent = \"accent\";\r\n    static readonly Good = \"good\";\r\n    static readonly Attention = \"attention\";\r\n    static readonly Warning = \"warning\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion,\r\n    DuplicateId\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport const ContentTypes = {\r\n\tapplicationJson: \"application/json\",\r\n\tapplicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n\tspacing: number,\r\n\tlineThickness?: number,\r\n\tlineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n\tid: string;\r\n    value: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n\tprivate _isProcessed: boolean = false;\r\n\tprivate _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\")\r\n        }\r\n\r\n        for (let input of inputs) {\r\n            let matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\r\n\r\n            if (matches != null) {\r\n                referencedInputs[input.id] = input;\r\n            }\r\n        }\r\n    }\r\n\r\n\tsubstituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n\t\tthis._processed = this._original;\r\n\r\n\t\tlet regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n\t\tlet matches;\r\n\r\n\t\twhile ((matches = regEx.exec(this._original)) != null) {\r\n\t\t\tlet matchedInput: IInput = null;\r\n\r\n\t\t\tfor (let key of Object.keys(inputs)) {\r\n\t\t\t\tif (key.toLowerCase() == matches[1].toLowerCase()) {\r\n\t\t\t\t\tmatchedInput = inputs[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n            }\r\n\r\n            if (matchedInput) {\r\n\t\t\t\tvar valueForReplace = \"\";\r\n\r\n\t\t\t\tif (matchedInput.value) {\r\n\t\t\t\t\tvalueForReplace = matchedInput.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (contentType === ContentTypes.applicationJson) {\r\n\t\t\t\t\tvalueForReplace = JSON.stringify(valueForReplace);\r\n\t\t\t\t\tvalueForReplace = valueForReplace.slice(1, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n\t\t\t\t\tvalueForReplace = encodeURIComponent(valueForReplace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._processed = this._processed.replace(matches[0], valueForReplace);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._isProcessed = true;\r\n\t}\r\n\r\n\tgetOriginal(): string {\r\n\t\treturn this._original;\r\n\t}\r\n\r\n\tget(): string {\r\n\t\tif (!this._isProcessed) {\r\n\t\t\treturn this._original;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._processed;\r\n\t\t}\r\n\t}\r\n\r\n\tset(value: string) {\r\n\t\tthis._original = value;\r\n\t\tthis._isProcessed = false;\r\n\t}\r\n}\r\n\r\nexport class SpacingDefinition {\r\n\tleft: number = 0;\r\n\ttop: number = 0;\r\n\tright: number = 0;\r\n\tbottom: number = 0;\r\n\r\n\tconstructor(top: number = 0,\r\n\t\tright: number = 0,\r\n\t\tbottom: number = 0,\r\n\t\tleft: number = 0) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class PaddingDefinition {\r\n\ttop: Enums.Spacing = Enums.Spacing.None;\r\n\tright: Enums.Spacing = Enums.Spacing.None;\r\n\tbottom: Enums.Spacing = Enums.Spacing.None;\r\n\tleft: Enums.Spacing = Enums.Spacing.None;\r\n\r\n\tconstructor(top: Enums.Spacing = Enums.Spacing.None,\r\n\t\tright: Enums.Spacing = Enums.Spacing.None,\r\n\t\tbottom: Enums.Spacing = Enums.Spacing.None,\r\n\t\tleft: Enums.Spacing = Enums.Spacing.None) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class SizeAndUnit {\r\n\tphysicalSize: number;\r\n\tunit: Enums.SizeUnit;\r\n\r\n\tstatic parse(input: any, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n\t\tlet result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n\t\tlet regExp = /^([0-9]+)(px|\\*)?$/g;\r\n\t\tlet matches = regExp.exec(input);\r\n\t\tlet expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n\t\tif (matches && matches.length >= expectedMatchCount) {\r\n\t\t\tresult.physicalSize = parseInt(matches[1]);\r\n\r\n\t\t\tif (matches.length == 3) {\r\n\t\t\t\tif (matches[2] == \"px\") {\r\n\t\t\t\t\tresult.unit = Enums.SizeUnit.Pixel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid size: \" + input);\r\n\t}\r\n\r\n\tconstructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n\t\tthis.physicalSize = physicalSize;\r\n\t\tthis.unit = unit;\r\n\t}\r\n}\r\n\r\nexport interface IResourceInformation {\r\n\turl: string;\r\n\tmimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n\tprivate static lut = [];\r\n\r\n\tstatic generate(): string {\r\n\t\tlet d0 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d1 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d2 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d3 = Math.random() * 0xffffffff | 0;\r\n\r\n\t\treturn UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n\t\t\tUUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n\t}\r\n\r\n\tstatic initialize() {\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tUUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nUUID.initialize();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function getStringValue(obj: any, defaultValue: string = undefined): string {\r\n    return obj ? obj.toString() : defaultValue;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function setProperty(target: any, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: any, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    let targetValue = target[propertyName];\r\n\r\n    let canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n\r\n    if (propertyValue == defaultValue) {\r\n        if (canDeleteTarget) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        if (propertyValue == undefined) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n}\r\n\r\nexport function getBoolValue(value: any, defaultValue: boolean): boolean {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValue(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValue(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        let separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n    maxHeight: number,\r\n    lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            (this[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition(\r\n        {\r\n            \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n            \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n            \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n            \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n            \"good\": { default: \"#54A254\", subtle: \"#DD54A254\" },\r\n            \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n            \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n        }\r\n    );\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n\r\n    constructor(major: number = 1, minor: number = 1) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n\r\n    static parse(versionString: string, errors?: Array<IValidationError>): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid && errors) {\r\n            errors.push(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid version string: \" + result._versionString\r\n                }\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type HostCapabilityVersion = Version | \"*\";\r\nexport type HostCapabilityMap = { [key: string]: HostCapabilityVersion };\r\n\r\nexport class HostCapabilities {\r\n    private setCapability(name: string, version: HostCapabilityVersion) {\r\n        if (!this.capabilities) {\r\n            this.capabilities = { };\r\n        }\r\n\r\n        this.capabilities[name] = version;\r\n    }\r\n\r\n    capabilities: HostCapabilityMap = null;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        if (json) {\r\n            for (let name in json) {\r\n                let jsonVersion = json[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion == \"*\") {\r\n                        this.setCapability(name, \"*\");\r\n                    }\r\n                    else {\r\n                        let version = Version.parse(jsonVersion, errors);\r\n\r\n                        if (version.isValid) {\r\n                            this.setCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCapability(name: string, version: HostCapabilityVersion): boolean {\r\n        if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\r\n            if (version == \"*\" || this.capabilities[name] == \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this.capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        if (this.capabilities) {\r\n            for (let capabilityName in this.capabilities) {\r\n                if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace =  new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n            default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n            medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n            large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n            extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n            default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n            bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes: FontTypeSet = null;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        }\r\n        else {\r\n            return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n\tpaddingDefinitionToSpacingDefinition(paddingDefinition: Shared.PaddingDefinition): Shared.SpacingDefinition {\r\n\t\treturn new Shared.SpacingDefinition(\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.top),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.right),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.bottom),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.left));\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        let result: string[] = [];\r\n\r\n        for (let className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport * from \"./shared\";\r\nexport * from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nenum InstanceCreationErrorType {\r\n    UnknownType,\r\n    ForbiddenType\r\n}\r\n\r\nfunction createCardObjectInstance<T extends CardObject>(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenTypeNames: string[],\r\n    allowFallback: boolean,\r\n    createInstanceCallback: (typeName: string) => T,\r\n    createValidationErrorCallback: (typeName: string, errorType: InstanceCreationErrorType) => HostConfig.IValidationError,\r\n    errors: Array<HostConfig.IValidationError>): T {\r\n    let result: T = null;\r\n\r\n    if (json && typeof json === \"object\") {\r\n        let tryToFallback = false;\r\n        let typeName = Utils.getStringValue(json[\"type\"]);\r\n\r\n        if (forbiddenTypeNames && forbiddenTypeNames.indexOf(typeName) >= 0) {\r\n            raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.ForbiddenType), errors);\r\n        }\r\n        else {\r\n            result = createInstanceCallback(typeName);\r\n\r\n            if (!result) {\r\n                tryToFallback = allowFallback;\r\n\r\n                raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.UnknownType), errors);\r\n            }\r\n            else {\r\n                result.setParent(parent);\r\n                result.parse(json, errors);\r\n\r\n                tryToFallback = result.shouldFallback() && allowFallback;\r\n            }\r\n\r\n            if (tryToFallback) {\r\n                let fallback = json[\"fallback\"];\r\n\r\n                if (!fallback) {\r\n                    parent.setShouldFallback(true);\r\n                }\r\n                if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\r\n                    result = null;\r\n                }\r\n                else if (typeof fallback === \"object\") {\r\n                    result = createCardObjectInstance<T>(\r\n                        parent,\r\n                        fallback,\r\n                        forbiddenTypeNames,\r\n                        true,\r\n                        createInstanceCallback,\r\n                        createValidationErrorCallback,\r\n                        errors);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function createActionInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenActionTypes: string[],\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): Action {\r\n    return createCardObjectInstance<Action>(\r\n        parent,\r\n        json,\r\n        forbiddenActionTypes,\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.actionTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownActionType,\r\n                    message: \"Unknown action type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Action type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport function createElementInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): CardElement {\r\n    return createCardObjectInstance<CardElement>(\r\n        parent,\r\n        json,\r\n        [], // Forbidden types not supported for elements for now\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.elementTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownElementType,\r\n                    message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                    message: \"Element type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport abstract class SerializableObject {\r\n    private _rawProperties = {};\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._rawProperties = AdaptiveCard.enableFullJsonRoundTrip ? json : {};\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result: any;\r\n\r\n        if (AdaptiveCard.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\r\n            result = this._rawProperties;\r\n        }\r\n        else {\r\n            result = {};\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setCustomProperty(name: string, value: any) {\r\n        this._rawProperties[name] = value;\r\n    }\r\n\r\n    getCustomProperty(name: string): any {\r\n        return this._rawProperties[name];\r\n    }\r\n}\r\n\r\nexport class ValidationFailure {\r\n    readonly errors: HostConfig.IValidationError[] = [];\r\n\r\n    constructor(readonly cardObject: CardObject) { }\r\n}\r\n\r\nexport class ValidationResults {\r\n    private getFailureIndex(cardObject: CardObject) {\r\n        for (let i = 0; i < this.failures.length; i++) {\r\n            if (this.failures[i].cardObject === cardObject) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    readonly allIds: Shared.Dictionary<number> = {};\r\n    readonly failures: ValidationFailure[] = [];\r\n\r\n    addFailure(cardObject: CardObject, error: HostConfig.IValidationError) {\r\n        let index = this.getFailureIndex(cardObject);\r\n        let failure: ValidationFailure;\r\n\r\n        if (index < 0) {\r\n            failure = new ValidationFailure(cardObject);\r\n\r\n            this.failures.push(failure);\r\n        }\r\n        else {\r\n            failure = this.failures[index];\r\n        }\r\n\r\n        failure.errors.push(error);\r\n    }\r\n}\r\n\r\nexport abstract class CardObject extends SerializableObject {\r\n    abstract getJsonTypeName(): string;\r\n    abstract shouldFallback(): boolean;\r\n    abstract setParent(parent: CardElement);\r\n\r\n    id: string;\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        if (!Utils.isNullOrEmpty(this.id)) {\r\n            if (context.allIds.hasOwnProperty(this.id)) {\r\n                if (context.allIds[this.id] == 1) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.DuplicateId,\r\n                            message: \"Duplicate Id: \" + this.id\r\n                        });\r\n                }\r\n\r\n                context.allIds[this.id] += 1;\r\n            }\r\n            else {\r\n                context.allIds[this.id] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(): ValidationResults {\r\n        let result = new ValidationResults();\r\n\r\n        this.internalValidateProperties(result);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport type CardElementHeight = \"auto\" | \"stretch\";\r\n\r\nexport abstract class CardElement extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: Shared.PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        let renderedSeparator = Utils.renderSeparation(\r\n            this.hostConfig,\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n\r\n        return renderedSeparator;\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        let displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = displayMode;\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = displayMode;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this.isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this.isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this.isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this.isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this.isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n\r\n        if (this.minPixelHeight) {\r\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        return this.internalRender();\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.separatorElement) {\r\n            if (AdaptiveCard.alwaysBleedSeparators && this.separatorOrientation == Enums.Orientation.Horizontal && !this.isBleeding()) {\r\n                let padding = new Shared.PaddingDefinition();\r\n\r\n                this.getImmediateSurroundingPadding(padding);\r\n\r\n                let physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n            }\r\n            else {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition();\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getPadding(): Shared.PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: Shared.PaddingDefinition) {\r\n        this._padding = value;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    customCssSelector: string = null;\r\n    height: CardElementHeight = \"auto\";\r\n    minPixelHeight?: number = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    asString(): string {\r\n        return \"\";\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"isVisible\", this.isVisible, true);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        if (this.minPixelHeight) {\r\n            Utils.setProperty(result, \"minHeight\", this.minPixelHeight + \"px\");\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveStyle();\r\n        }\r\n\r\n        return this.defaultStyle;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    getImmediateSurroundingPadding(\r\n        result: Shared.PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (this.parent) {\r\n            let doProcessTop = processTop && this.parent.isTopElement(this);\r\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\r\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\r\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\r\n\r\n            let effectivePadding = this.parent.getEffectivePadding();\r\n\r\n            if (effectivePadding) {\r\n                if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\r\n                    result.top = effectivePadding.top;\r\n\r\n                    doProcessTop = false;\r\n                }\r\n\r\n                if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\r\n                    result.right = effectivePadding.right;\r\n\r\n                    doProcessRight = false;\r\n                }\r\n\r\n                if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\r\n                    result.bottom = effectivePadding.bottom;\r\n\r\n                    doProcessBottom = false;\r\n                }\r\n\r\n                if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\r\n                    result.left = effectivePadding.left;\r\n\r\n                    doProcessLeft = false;\r\n                }\r\n            }\r\n\r\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\r\n                this.parent.getImmediateSurroundingPadding(\r\n                    result,\r\n                    doProcessTop,\r\n                    doProcessRight,\r\n                    doProcessBottom,\r\n                    doProcessLeft);\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n        this.isVisible = Utils.getBoolValue(json[\"isVisible\"], this.isVisible);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n\r\n        this.spacing = Utils.getEnumValue(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = Utils.getBoolValue(json[\"separator\"], this.separator);\r\n\r\n        let jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n\r\n        if (this.supportsMinHeight) {\r\n            let jsonMinHeight = json[\"minHeight\"];\r\n\r\n            if (jsonMinHeight && typeof jsonMinHeight === \"string\") {\r\n                let isValid = false;\r\n\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(jsonMinHeight, true);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        this.minPixelHeight = size.physicalSize;\r\n\r\n                        isValid = true;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Do nothing. A parse error is emitted below\r\n                }\r\n\r\n                if (!isValid) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.InvalidPropertyValue,\r\n                            message: \"Invalid \\\"minHeight\\\" value: \" + jsonMinHeight\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.overrideInternalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n        this.applyPadding();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this.isFirstElement(element);\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this.isLastElement(element);\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    setShouldFallback(value: boolean) {\r\n        this._shouldFallback = value;\r\n    }\r\n\r\n    getEffectivePadding(): Shared.PaddingDefinition {\r\n        let padding = this.getPadding();\r\n\r\n        return (padding && this.allowCustomPadding) ? padding : this.getDefaultPadding();\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.separatorElement) {\r\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class BaseTextBlock extends CardElement {\r\n    private _text: string;\r\n    private _selectAction: Action = null;\r\n\r\n    protected getEffectiveStyleDefinition() {\r\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\r\n    }\r\n\r\n    protected getFontSize(fontType: HostConfig.FontTypeDefinition): number {\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                return fontType.fontSizes.small;\r\n            case Enums.TextSize.Medium:\r\n                return fontType.fontSizes.medium;\r\n            case Enums.TextSize.Large:\r\n                return fontType.fontSizes.large;\r\n            case Enums.TextSize.ExtraLarge:\r\n                return fontType.fontSizes.extraLarge;\r\n            default:\r\n                return fontType.fontSizes.default;\r\n        }\r\n    }\r\n\r\n    protected getColorDefinition(colorSet: HostConfig.ColorSetDefinition, color: Enums.TextColor): HostConfig.TextColorDefinition {\r\n        switch (color) {\r\n            case Enums.TextColor.Accent:\r\n                return colorSet.accent;\r\n            case Enums.TextColor.Dark:\r\n                return colorSet.dark;\r\n            case Enums.TextColor.Light:\r\n                return colorSet.light;\r\n            case Enums.TextColor.Good:\r\n                return colorSet.good;\r\n            case Enums.TextColor.Warning:\r\n                return colorSet.warning;\r\n            case Enums.TextColor.Attention:\r\n                return colorSet.attention;\r\n            default:\r\n                return colorSet.default;\r\n        }\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    fontType?: Enums.FontType = null;\r\n\r\n    asString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setEnumProperty(Enums.FontType, result, \"fontType\", this.fontType, Enums.FontType.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        let fontType = this.hostConfig.getFontTypeDefinition(this.fontType);\r\n\r\n        if (fontType.fontFamily) {\r\n            targetElement.style.fontFamily = fontType.fontFamily;\r\n        }\r\n\r\n        let fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = fontType.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = fontType.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = fontType.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = fontType.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = fontType.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n\r\n        let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        let fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = fontType.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = fontType.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = fontType.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = Utils.getStringValue(json[\"text\"]);\r\n\r\n        let sizeString = Utils.getStringValue(json[\"size\"]);\r\n\r\n        if (sizeString && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValue(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        let weightString = Utils.getStringValue(json[\"weight\"]);\r\n\r\n        if (weightString && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValue(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValue(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = Utils.getBoolValue(json[\"isSubtle\"], this.isSubtle);\r\n        this.fontType = Utils.getEnumValue(Enums.FontType, json[\"fontType\"], this.fontType);\r\n    }\r\n\r\n    get effectiveColor(): Enums.TextColor {\r\n        return this.color ? this.color : Enums.TextColor.Default;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this.setText(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextBlock extends BaseTextBlock {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _processedText: string = null;\r\n    private _treatAsPlainText: boolean = true;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        super.setText(value);\r\n\r\n        this._processedText = null;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._processedText = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                if (hostConfig.supportsInteractivity) {\r\n                    element.tabIndex = 0\r\n                    element.setAttribute(\"role\", \"button\");\r\n                    element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._treatAsPlainText = true;\r\n\r\n                let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                if (this.useMarkdown) {\r\n                    if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                        formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==\");\r\n                    }\r\n\r\n                    let markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\r\n\r\n                    if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\r\n                        this._processedText = markdownProcessingResult.outputHtml;\r\n                        this._treatAsPlainText = false;\r\n\r\n                        // Only process <mark> tag if markdown processing was applied because\r\n                        // markdown processing is also responsible for sanitizing the input string\r\n                        if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                            let markStyle: string = \"\";\r\n                            let effectiveStyle = this.getEffectiveStyleDefinition();\r\n\r\n                            if (effectiveStyle.highlightBackgroundColor) {\r\n                                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\r\n                            }\r\n\r\n                            if (effectiveStyle.highlightForegroundColor) {\r\n                                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\r\n                            }\r\n\r\n                            if (!Utils.isNullOrEmpty(markStyle)) {\r\n                                markStyle = 'style=\"' + markStyle + '\"';\r\n                            }\r\n\r\n                            this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==/g, \"</mark>\");\r\n                        }\r\n                    } else {\r\n                        this._processedText = formattedText;\r\n                        this._treatAsPlainText = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._processedText = formattedText;\r\n                    this._treatAsPlainText = true;\r\n                }\r\n            }\r\n\r\n            if (this._treatAsPlainText) {\r\n                element.innerText = this._processedText;\r\n            }\r\n            else {\r\n                element.innerHTML = this._processedText;\r\n            }\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                let firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            let anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (let i = 0; i < anchors.length; i++) {\r\n                let anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        let parentContainer = this.getParentContainer();\r\n        let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                break;\r\n        }\r\n\r\n        let lineHeights = this.hostConfig.lineHeights;\r\n\r\n        if (lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.fontType)) * 1.33;\r\n        }\r\n\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    forElementId: string;\r\n}\r\n\r\nexport class TextRun extends BaseTextBlock {\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                let anchor = document.createElement(\"a\");\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.href = this.selectAction.getHref();\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                anchor.innerText = formattedText;\r\n\r\n                element.appendChild(anchor);\r\n            }\r\n            else {\r\n                element.innerText = formattedText;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    italic: boolean = false;\r\n    strikethrough: boolean = false;\r\n    highlight: boolean = false;\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        if (this.italic) {\r\n            targetElement.style.fontStyle = \"italic\";\r\n        }\r\n\r\n        if (this.strikethrough) {\r\n            targetElement.style.textDecoration = \"line-through\";\r\n        }\r\n\r\n        if (this.highlight) {\r\n            let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n            targetElement.style.backgroundColor = Utils.stringToCssColor(this.isSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"italic\", this.italic, false);\r\n        Utils.setProperty(result, \"strikethrough\", this.strikethrough, false);\r\n        Utils.setProperty(result, \"highlight\", this.highlight, false);\r\n\r\n        if (this.selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.italic = Utils.getBoolValue(json[\"italic\"], this.italic);\r\n        this.strikethrough = Utils.getBoolValue(json[\"strikethrough\"], this.strikethrough);\r\n        this.highlight = Utils.getBoolValue(json[\"highlight\"], this.highlight);\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextRun\";\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class RichTextBlock extends CardElement {\r\n    private _inlines: CardElement[] = [];\r\n\r\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\r\n        if (!inline.isInline) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\");\r\n        }\r\n\r\n        let doAdd: boolean = inline.parent == null || forceAdd;\r\n\r\n        if (!doAdd && inline.parent != this) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\");\r\n        }\r\n        else {\r\n            inline.setParent(this);\r\n\r\n            this._inlines.push(inline);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._inlines.length > 0) {\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\r\n\r\n            let parentContainer = this.getParentContainer();\r\n            let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                    break;\r\n            }\r\n\r\n            for (let inline of this._inlines) {\r\n                element.appendChild(inline.render());\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    asString(): string {\r\n        let result = \"\";\r\n\r\n        for (let inline of this._inlines) {\r\n            result += inline.asString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._inlines = [];\r\n\r\n        if (Array.isArray(json[\"inlines\"])) {\r\n            for (let jsonInline of json[\"inlines\"]) {\r\n                let inline: CardElement;\r\n\r\n                if (typeof jsonInline === \"string\") {\r\n                    let textRun = new TextRun();\r\n                    textRun.text = jsonInline;\r\n\r\n                    inline = textRun;\r\n                }\r\n                else {\r\n                    inline = createElementInstance(\r\n                        this,\r\n                        jsonInline,\r\n                        false, // No fallback for inlines in 1.2\r\n                        errors);\r\n                }\r\n\r\n                if (inline) {\r\n                    this.internalAddInline(inline, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._inlines.length > 0) {\r\n            let jsonInlines: any[] = [];\r\n\r\n            for (let inline of this._inlines) {\r\n                jsonInlines.push(inline.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"inlines\", jsonInlines);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"RichTextBlock\";\r\n    }\r\n\r\n    getInlineCount(): number {\r\n        return this._inlines.length;\r\n    }\r\n\r\n    getInlineAt(index: number): CardElement {\r\n        if (index >= 0 && index < this._inlines.length) {\r\n            return this._inlines[index];\r\n        }\r\n        else {\r\n            throw new Error(\"RichTextBlock.getInlineAt: Index out of range (\" + index + \")\");\r\n        }\r\n    }\r\n\r\n    addInline(inline: CardElement) {\r\n        this.internalAddInline(inline);\r\n    }\r\n\r\n    removeInline(inline: CardElement): boolean {\r\n        let index = this._inlines.indexOf(inline);\r\n\r\n        if (index >= 0) {\r\n            this._inlines[index].setParent(null);\r\n            this._inlines.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact {\r\n    name: string;\r\n    value: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        this.name = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.name, value: this.value };\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (let i = 0; i < this.facts.length; i++) {\r\n                let trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                // Title column\r\n                let tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                let textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = hostConfig.factSet.title.size;\r\n                textBlock.color = hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.title.weight;\r\n                textBlock.wrap = hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Spacer column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.width = \"10px\";\r\n\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Value column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = hostConfig.factSet.value.size;\r\n                textBlock.color = hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.value.weight;\r\n                textBlock.wrap = hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let facts = []\r\n\r\n        for (let fact of this.facts) {\r\n            facts.push(fact.toJSON());\r\n        }\r\n\r\n        Utils.setProperty(result, \"facts\", facts);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"] as Array<any>;\r\n\r\n            this.facts = [];\r\n\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                let fact = new Fact();\r\n                fact.parse(jsonFacts[i]);\r\n\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<HostConfig.IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction && (e.keyCode == 13 || e.keyCode == 32)) { // enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Shared.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.backgroundColor = Utils.getStringValue(json[\"backgroundColor\"]);\r\n\r\n        let styleString = Utils.getStringValue(json[\"style\"]);\r\n\r\n        if (styleString && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValue(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValue(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    private _selectAction: Action = null;\r\n\r\n    protected isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (let forbiddenElementType of forbiddenElementTypes) {\r\n                if (element.getJsonTypeName() === forbiddenElementType) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        this.renderedElement.style.marginRight = \"0\";\r\n        this.renderedElement.style.marginLeft = \"0\";\r\n    }\r\n\r\n    protected getSelectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    protected setSelectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract getFirstVisibleRenderedItem(): CardElement;\r\n    abstract getLastVisibleRenderedItem(): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (this.isSelectable) {\r\n            this._selectAction = createActionInstance(\r\n                this,\r\n                json[\"selectAction\"],\r\n                [ShowCardAction.JsonTypeName],\r\n                !this.isDesignMode(),\r\n                errors);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction && this.isSelectable) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            let item = this.getItemAt(i);\r\n\r\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(item, this.getForbiddenElementTypes())) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + item.getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let element = super.render();\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this._selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this._selectAction != null) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this._selectAction != null && (e.keyCode == 13 || e.keyCode == 32)) {\r\n                    // Enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                this.getItemAt(i).updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        let result = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                result = this.getItemAt(i).getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[0] : null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : null;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValue(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n}\r\n\r\nexport class MediaSource {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.mimeType = Utils.getStringValue(json[\"mimeType\"]);\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            mimeType: this.mimeType,\r\n            url: this.url\r\n        }\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n        for (let source of this.sources) {\r\n            let mimeComponents = source.mimeType.split('/');\r\n\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n\r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n\r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.poster = Utils.getStringValue(json[\"poster\"]);\r\n        this.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        if (json[\"sources\"] != null) {\r\n            let jsonSources = json[\"sources\"] as Array<any>;\r\n\r\n            this.sources = [];\r\n\r\n            for (let i = 0; i < jsonSources.length; i++) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSources[i], errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport class InputValidationOptions {\r\n    necessity: Enums.InputValidationNecessity = Enums.InputValidationNecessity.Optional;\r\n    errorMessage: string = undefined;\r\n\r\n    parse(json: any) {\r\n        this.necessity = Utils.getEnumValue(Enums.InputValidationNecessity, json[\"necessity\"], this.necessity);\r\n        this.errorMessage = Utils.getStringValue(json[\"errorMessage\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.necessity != Enums.InputValidationNecessity.Optional || !Utils.isNullOrEmpty(this.errorMessage)) {\r\n            let result = {}\r\n\r\n            Utils.setEnumProperty(Enums.InputValidationNecessity, result, \"necessity\", this.necessity, Enums.InputValidationNecessity.Optional);\r\n            Utils.setProperty(result, \"errorMessage\", this.errorMessage);\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Shared.IInput {\r\n    private _outerContainerElement: HTMLElement;\r\n    private _inputControlContainerElement: HTMLElement;\r\n    private _errorMessageElement: HTMLElement;\r\n    private _renderedInputControlElement: HTMLElement;\r\n    private _defaultValue: string;\r\n\r\n    protected get isNullable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderedInputControlElement(): HTMLElement {\r\n        return this._renderedInputControlElement;\r\n    }\r\n\r\n    protected get inputControlContainerElement(): HTMLElement {\r\n        return this._inputControlContainerElement;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let hostConfig = this.hostConfig;\r\n\r\n        this._outerContainerElement = document.createElement(\"div\");\r\n        this._outerContainerElement.style.display = \"flex\";\r\n        this._outerContainerElement.style.flexDirection = \"column\";\r\n\r\n        this._inputControlContainerElement = document.createElement(\"div\");\r\n        this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\r\n        this._inputControlContainerElement.style.display = \"flex\";\r\n\r\n        this._renderedInputControlElement = this.internalRender();\r\n        this._renderedInputControlElement.style.minWidth = \"0px\";\r\n\r\n        if (this.isNullable && this.validation.necessity == Enums.InputValidationNecessity.RequiredWithVisualCue) {\r\n            this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\r\n        }\r\n\r\n        this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\r\n\r\n        this._outerContainerElement.appendChild(this._inputControlContainerElement);\r\n\r\n        return this._outerContainerElement;\r\n    }\r\n\r\n    protected valueChanged() {\r\n        this.resetValidationFailureCue();\r\n\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n\r\n        raiseInputValueChangedEvent(this);\r\n    }\r\n\r\n    protected resetValidationFailureCue() {\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.renderedElement) {\r\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n            if (this._errorMessageElement) {\r\n                this._outerContainerElement.removeChild(this._errorMessageElement);\r\n\r\n                this._errorMessageElement = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected showValidationErrorMessage() {\r\n        if (this.renderedElement && AdaptiveCard.useBuiltInInputValidation && AdaptiveCard.displayInputValidationErrors && !Utils.isNullOrEmpty(this.validation.errorMessage)) {\r\n            this._errorMessageElement = document.createElement(\"span\");\r\n            this._errorMessageElement.className = this.hostConfig.makeCssClassName(\"ac-input-validation-error-message\");\r\n            this._errorMessageElement.textContent = this.validation.errorMessage;\r\n\r\n            this._outerContainerElement.appendChild(this._errorMessageElement);\r\n        }\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    readonly validation = new InputValidationOptions();\r\n\r\n    title: string;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement && !Utils.isNullOrEmpty(this.value) ? this.value : this.defaultValue);\r\n        Utils.setProperty(result, \"validation\", this.validation.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.id)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"All inputs must have a unique Id\"\r\n                });\r\n        }\r\n    }\r\n\r\n    validateValue(): boolean {\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            this.resetValidationFailureCue();\r\n\r\n            let result = this.validation.necessity != Enums.InputValidationNecessity.Optional ? !Utils.isNullOrEmpty(this.value) : true;\r\n\r\n            if (!result && this.renderedElement) {\r\n                this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n                this.showValidationErrorMessage();\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n        this.defaultValue = Utils.getStringValue(json[\"value\"]);\r\n\r\n        let jsonValidation = json[\"validation\"];\r\n\r\n        if (jsonValidation) {\r\n            this.validation.parse(jsonValidation);\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get defaultValue(): string {\r\n        return this._defaultValue;\r\n    }\r\n\r\n    set defaultValue(value: string) {\r\n        this._defaultValue = this.parseInputValue(value);\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _inlineAction: Action;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            let textareaElement = document.createElement(\"textarea\");\r\n            textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            textareaElement.style.flex = \"1 1 auto\";\r\n            textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                textareaElement.placeholder = this.placeholder;\r\n                textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            textareaElement.oninput = () => { this.valueChanged(); }\r\n            textareaElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Ctrl+Enter pressed\r\n                if (e.keyCode == 10 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return textareaElement;\r\n        }\r\n        else {\r\n            let inputElement = document.createElement(\"input\");\r\n            inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            inputElement.style.flex = \"1 1 auto\";\r\n            inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                inputElement.placeholder = this.placeholder;\r\n                inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            inputElement.oninput = () => { this.valueChanged(); }\r\n            inputElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Enter pressed\r\n                if (e.keyCode == 13 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return inputElement;\r\n        }\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let renderedInputControl = super.overrideInternalRender();\r\n\r\n        if (this.inlineAction) {\r\n            let button = document.createElement(\"button\");\r\n            button.className = this.hostConfig.makeCssClassName(\"ac-inlineActionButton\");\r\n            button.onclick = (e) => {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n\r\n                this.inlineAction.execute();\r\n            };\r\n\r\n            if (!Utils.isNullOrEmpty(this.inlineAction.iconUrl)) {\r\n                button.classList.add(\"iconOnly\");\r\n\r\n                let icon = document.createElement(\"img\");\r\n                icon.style.height = \"100%\";\r\n\r\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\r\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\r\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\r\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\r\n                icon.style.display = \"none\";\r\n                icon.onload = () => {\r\n                    icon.style.removeProperty(\"display\");\r\n                };\r\n                icon.onerror = () => {\r\n                    button.removeChild(icon);\r\n                    button.classList.remove(\"iconOnly\");\r\n                    button.classList.add(\"textOnly\");\r\n                    button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n                }\r\n                icon.src = this.inlineAction.iconUrl;\r\n\r\n                button.appendChild(icon);\r\n\r\n                if (!Utils.isNullOrEmpty(this.inlineAction.title)) {\r\n                    button.title = this.inlineAction.title;\r\n                }\r\n            }\r\n            else {\r\n                button.classList.add(\"textOnly\");\r\n                button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n            }\r\n\r\n            button.style.marginLeft = \"8px\";\r\n\r\n            this.inputControlContainerElement.appendChild(button);\r\n        }\r\n\r\n        return renderedInputControl;\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean = false;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.inlineAction) {\r\n            result = this.inlineAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        if (this._inlineAction) {\r\n            Utils.setProperty(result, \"inlineAction\", this._inlineAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = Utils.getBoolValue(json[\"isMultiline\"], this.isMultiline);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.style = Utils.getEnumValue(Enums.InputTextStyle, json[\"style\"], this.style);\r\n        this.inlineAction = createActionInstance(\r\n            this,\r\n            json[\"inlineAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    get inlineAction(): Action {\r\n        return this._inlineAction;\r\n    }\r\n\r\n    set inlineAction(value: Action) {\r\n        this._inlineAction = value;\r\n\r\n        if (this._inlineAction) {\r\n            this._inlineAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.renderedInputControlElement) {\r\n            if (this.isMultiline) {\r\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\r\n            }\r\n            else {\r\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = Utils.generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            let label = new Label();\r\n            label.setParent(this);\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            let labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            let spacerElement = document.createElement(\"div\");\r\n            spacerElement.style.width = \"6px\";\r\n\r\n            Utils.appendChild(element, spacerElement);\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        Utils.setProperty(result, \"wrap\", this.wrap);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.valueOn = Utils.getStringValue(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getStringValue(json[\"valueOff\"], this.valueOff);\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.title, value: this.value };\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                let option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => { this.valueChanged(); }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                let element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-expanded\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (let i = 0; i < this.choices.length; i++) {\r\n                    let radioInput = document.createElement(\"input\");\r\n                    radioInput.id = Utils.generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    let label = new Label();\r\n                    label.setParent(this);\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    label.wrap = this.wrap;\r\n\r\n                    let labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    let spacerElement = document.createElement(\"div\");\r\n                    spacerElement.style.width = \"6px\";\r\n\r\n                    let compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    compoundInput.style.alignItems = \"center\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, spacerElement);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            let defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-multiSelect\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (let i = 0; i < this.choices.length; i++) {\r\n                let checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = Utils.generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                let label = new Label();\r\n                label.setParent(this);\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                label.wrap = this.wrap;\r\n\r\n                let labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                let spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                let compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, spacerElement);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean = false;\r\n    isMultiSelect: boolean = false;\r\n    placeholder: string;\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        if (this.choices.length > 0) {\r\n            var choices = [];\r\n\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"choices\", choices);\r\n        }\r\n\r\n        if (!this.isCompact) {\r\n            Utils.setProperty(result, \"style\", \"expanded\", false);\r\n        }\r\n\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.choices.length == 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.CollectionCantBeEmpty,\r\n                    message: \"An Input.ChoiceSet must have at least one choice defined.\"\r\n                });\r\n        }\r\n\r\n        for (let choice of this.choices) {\r\n            if (!choice.title || !choice.value) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.PropertyCantBeNull,\r\n                        message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\"\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = Utils.getBoolValue(json[\"isMultiSelect\"], this.isMultiSelect);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n\r\n        this.choices = [];\r\n\r\n        if (json[\"choices\"] != undefined) {\r\n            let choiceArray = json[\"choices\"] as Array<any>;\r\n\r\n            for (let i = 0; i < choiceArray.length; i++) {\r\n                let choice = new Choice();\r\n                choice.parse(choiceArray[i]);\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                if (this._selectElement) {\r\n                    return this._selectElement.selectedIndex > 0 ? this._selectElement.value : null;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.setAttribute(\"min\", this.min);\r\n        this._dateInputElement.setAttribute(\"max\", this.max);\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        this._dateInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.setAttribute(\"min\", this.min);\r\n        this._timeInputElement.setAttribute(\"max\", this.max);\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        this._timeInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        if (/^[0-9]{2}:[0-9]{2}$/.test(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        if (!Utils.isNullOrEmpty(this._parentContainerStyle)) {\r\n            this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        }\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.action.style)) {\r\n            if (this.action.style === Enums.ActionStyle.Positive) {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\r\n            }\r\n            else {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"style-\" + this.action.style.toLowerCase()));\r\n             }\r\n        }\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    render(alignment: Enums.ActionAlignment) {\r\n        this.action.render();\r\n        this.action.renderedElement.style.flex = alignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n        this.action.renderedElement.onclick = (e) => {\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n\r\n            this.click();\r\n        };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        return {};\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalValidateInputs(referencedInputs: Shared.Dictionary<Input>): Array<Input> {\r\n        let result: Input[] = [];\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && !this.ignoreInputValidation) {\r\n            for (let key of Object.keys(referencedInputs)) {\r\n                let input = referencedInputs[key];\r\n\r\n                if (!input.validateValue()) {\r\n                    result.push(input);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    title: string;\r\n    iconUrl: string;\r\n    style: string = Enums.ActionStyle.Default;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    getHref(): string {\r\n        return \"\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        Utils.setProperty(result, \"style\", this.style, Enums.ActionStyle.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    render(baseCssClass: string = \"ac-pushButton\") {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        let buttonElement = document.createElement(\"button\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    prepareForExecution(): boolean {\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        if (this.internalValidateInputs(referencedInputs).length > 0) {\r\n            return false;\r\n        }\r\n\r\n        this.internalPrepareForExecution(referencedInputs);\r\n\r\n        return true;\r\n    };\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        raiseParseActionEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.iconUrl = Utils.getStringValue(json[\"iconUrl\"]);\r\n        this.style = Utils.getStringValue(json[\"style\"], this.style);\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    getReferencedInputs(): Shared.Dictionary<Input> {\r\n        return this.internalGetReferencedInputs(this.parent.getRootElement().getAllInputs());\r\n    }\r\n\r\n    validateInputs() {\r\n        return this.internalValidateInputs(this.getReferencedInputs());\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.parent.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    get isPrimary(): boolean {\r\n        return this.style == Enums.ActionStyle.Positive;\r\n    }\r\n\r\n    set isPrimary(value: boolean) {\r\n        if (value) {\r\n            this.style = Enums.ActionStyle.Positive;\r\n        }\r\n        else {\r\n            if (this.style == Enums.ActionStyle.Positive) {\r\n                this.style = Enums.ActionStyle.Default;\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    static readonly JsonTypeName = \"Action.Submit\";\r\n\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        for (let input of allInputs) {\r\n            result[input.id] = input;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (let key of Object.keys(inputs)) {\r\n            let input = inputs[key];\r\n\r\n            if (input.value != null) {\r\n                this._processedData[input.id] = input.value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return SubmitAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    static readonly JsonTypeName = \"Action.OpenUrl\";\r\n\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return OpenUrlAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.OpenUrl must have its url property set.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    getHref(): string {\r\n        return this.url;\r\n    }\r\n}\r\n\r\nexport class ToggleVisibilityAction extends Action {\r\n    static readonly JsonTypeName = \"Action.ToggleVisibility\";\r\n\r\n    targetElements = {}\r\n\r\n    getJsonTypeName(): string {\r\n        return ToggleVisibilityAction.JsonTypeName;\r\n    }\r\n\r\n    execute() {\r\n        for (let elementId of Object.keys(this.targetElements)) {\r\n            let targetElement = this.parent.getRootElement().getElementById(elementId);\r\n\r\n            if (targetElement) {\r\n                if (typeof this.targetElements[elementId] === \"boolean\") {\r\n                    targetElement.isVisible = this.targetElements[elementId];\r\n                }\r\n                else {\r\n                    targetElement.isVisible = !targetElement.isVisible;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.targetElements = {};\r\n\r\n        let jsonTargetElements = json[\"targetElements\"];\r\n\r\n        if (jsonTargetElements && Array.isArray(jsonTargetElements)) {\r\n            for (let item of jsonTargetElements) {\r\n                if (typeof item === \"string\") {\r\n                    this.targetElements[item] = undefined;\r\n                }\r\n                else if (typeof item === \"object\") {\r\n                    let jsonElementId = item[\"elementId\"];\r\n\r\n                    if (jsonElementId && typeof jsonElementId === \"string\") {\r\n                        this.targetElements[jsonElementId] = Utils.getBoolValue(item[\"isVisible\"], undefined);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let targetElements: any[] = [];\r\n\r\n        for (let id of Object.keys(this.targetElements)) {\r\n            if (typeof this.targetElements[id] === \"boolean\") {\r\n                targetElements.push(\r\n                    {\r\n                        elementId: id,\r\n                        isVisible: this.targetElements[id]\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                targetElements.push(id);\r\n            }\r\n        }\r\n\r\n        result[\"targetElements\"] = targetElements;\r\n\r\n        return result;\r\n    }\r\n\r\n    addTargetElement(elementId: string, isVisible: boolean = undefined) {\r\n        this.targetElements[elementId] = isVisible;\r\n    }\r\n\r\n    removeTargetElement(elementId) {\r\n        delete this.targetElements[elementId];\r\n    }\r\n}\r\n\r\nexport class HttpHeader {\r\n    private _value = new Shared.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        this.name = Utils.getStringValue(json[\"name\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        return { name: this.name, value: this._value.getOriginal() };\r\n    }\r\n\r\n    getReferencedInputs(inputs: Array<Input>, referencedInputs: Shared.Dictionary<Input>) {\r\n        this._value.getReferencedInputs(inputs, referencedInputs);\r\n    }\r\n\r\n    prepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._value.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    static readonly JsonTypeName = \"Action.Http\";\r\n\r\n    private _url = new Shared.StringWithSubstitutions();\r\n    private _body = new Shared.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        this._url.getReferencedInputs(allInputs, result);\r\n\r\n        for (let header of this._headers) {\r\n            header.getReferencedInputs(allInputs, result);\r\n        }\r\n\r\n        this._body.getReferencedInputs(allInputs, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._url.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Shared.ContentTypes.applicationJson;\r\n\r\n        for (let header of this._headers) {\r\n            header.prepareForExecution(inputs);\r\n\r\n            if (header.name && header.name.toLowerCase() == \"content-type\") {\r\n                contentType = header.value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return HttpAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n\r\n        if (this._headers.length > 0) {\r\n            let headers = [];\r\n\r\n            for (let header of this._headers) {\r\n                headers.push(header.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"headers\", headers);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.Http must have its url property set.\"\r\n                });\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (let header of this.headers) {\r\n                if (!header.name) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.PropertyCantBeNull,\r\n                            message: \"All headers of an Action.Http must have their name and value properties set.\"\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.method = Utils.getStringValue(json[\"method\"]);\r\n        this.body = Utils.getStringValue(json[\"body\"]);\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n\r\n        this._headers = [];\r\n\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                let httpHeader = new HttpHeader();\r\n                httpHeader.parse(jsonHeaders[i]);\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    static readonly JsonTypeName = \"Action.ShowCard\";\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this.card.internalValidateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        let jsonCard = json[\"card\"];\r\n\r\n        if (jsonCard) {\r\n            this.card.parse(jsonCard, errors);\r\n        }\r\n        else {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null) {\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        let padding = this._owner.getEffectivePadding();\r\n\r\n        this._owner.getImmediateSurroundingPadding(padding);\r\n\r\n        let physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\r\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n\r\n            if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\r\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\r\n            }\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.clear();\r\n\r\n        if (json && json instanceof Array) {\r\n            for (let jsonAction of json) {\r\n                let action = createActionInstance(\r\n                    this._owner,\r\n                    jsonAction,\r\n                    [],\r\n                    !this._owner.isDesignMode(),\r\n                    errors);\r\n\r\n                if (action) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(context: ValidationResults) {\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (let item of this.items) {\r\n            if (!isActionAllowed(item, this._owner.getForbiddenActionTypes())) {\r\n                context.addFailure(\r\n                    this._owner,\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + item.getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().getEffectiveStyle();\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    actionButton.render(this._owner.hostConfig.actions.actionAlignment);\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action) {\r\n            throw new Error(\"The action parameter cannot be null.\");\r\n        }\r\n\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this._actionCollection.validateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValue(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport abstract class StylableCardElementContainer extends CardElementContainer {\r\n    private _style?: string = null;\r\n    private _bleed: boolean = false;\r\n\r\n    protected applyBackground() {\r\n        let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n\r\n        if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n            this.renderedElement.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        if (this.isBleeding()) {\r\n            // Bleed into the first parent that does have padding\r\n            let padding = new Shared.PaddingDefinition();\r\n\r\n            this.getImmediateSurroundingPadding(padding);\r\n\r\n            let surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n\r\n            if (!this.isDesignMode()) {\r\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            this.renderedElement.style.marginRight = \"0\";\r\n            this.renderedElement.style.marginLeft = \"0\";\r\n            this.renderedElement.style.marginTop = \"0\";\r\n            this.renderedElement.style.marginBottom = \"0\";\r\n\r\n            if (this.separatorElement) {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        let currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            let currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\r\n\r\n            if (currentElement instanceof StylableCardElementContainer) {\r\n                if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return this.getHasBackground() ?\r\n            new Shared.PaddingDefinition(\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding) : super.getDefaultPadding();\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getBleed(): boolean {\r\n        return this._bleed;\r\n    }\r\n\r\n    protected setBleed(value: boolean) {\r\n        this._bleed = value;\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    protected get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return this.getHasBackground() && this.getBleed();\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"style\", this.style);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._style) {\r\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._style = Utils.getStringValue(json[\"style\"]);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let renderedElement = super.render();\r\n\r\n        if (renderedElement && this.getHasBackground()) {\r\n            this.applyBackground();\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        let effectiveStyle = this.style;\r\n\r\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage {\r\n    private static readonly defaultFillMode = Enums.FillMode.Cover;\r\n    private static readonly defaultHorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    private static readonly defaultVerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    url: string;\r\n    fillMode: Enums.FillMode = BackgroundImage.defaultFillMode;\r\n    horizontalAlignment: Enums.HorizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n    verticalAlignment: Enums.VerticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n\r\n    reset() {\r\n        this.url = undefined;\r\n        this.fillMode = BackgroundImage.defaultFillMode;\r\n        this.horizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n        this.verticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.fillMode = Utils.getEnumValue(Enums.FillMode, json[\"fillMode\"], this.fillMode);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    toJSON() {\r\n        if (!this.isValid()) {\r\n            return null;\r\n        }\r\n\r\n        if (this.fillMode == BackgroundImage.defaultFillMode &&\r\n            this.horizontalAlignment == BackgroundImage.defaultHorizontalAlignment &&\r\n            this.verticalAlignment == BackgroundImage.defaultVerticalAlignment) {\r\n            return this.url;\r\n        }\r\n        else {\r\n            let result = {};\r\n\r\n            Utils.setProperty(result, \"url\", this.url);\r\n            Utils.setEnumProperty(Enums.FillMode, result, \"fillMode\", this.fillMode, BackgroundImage.defaultFillMode);\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment, BackgroundImage.defaultHorizontalAlignment);\r\n            Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalAlignment\", this.verticalAlignment, BackgroundImage.defaultVerticalAlignment);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.fillMode) {\r\n                case Enums.FillMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.FillMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.FillMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.FillMode.Cover:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return !Utils.isNullOrEmpty(this.url);\r\n    }\r\n}\r\n\r\nexport class Container extends StylableCardElementContainer {\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n\r\n    private insertItemAt(\r\n        item: CardElement,\r\n        index: number,\r\n        forceInsert: boolean) {\r\n        if (!item.parent || forceInsert) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    protected supportsExcplitiHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.backgroundImage.isValid()) {\r\n            this.backgroundImage.apply(this.renderedElement);\r\n        }\r\n\r\n        super.applyBackground();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        if (this.rtl != null && this.rtl) {\r\n            element.dir = \"rtl\";\r\n        }\r\n\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return this.backgroundImage.isValid() || super.getHasBackground();\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    readonly backgroundImage: BackgroundImage = new BackgroundImage();\r\n\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n    rtl?: boolean = null;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.toJSON());\r\n\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let item of this._renderedItems) {\r\n                if (item.isVisible) {\r\n                    return item;\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\r\n                if (this._renderedItems[i].isVisible) {\r\n                    return this._renderedItems[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRtl(): boolean {\r\n        if (this.rtl != null) {\r\n            return this.rtl;\r\n        }\r\n        else {\r\n            let parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.isRtl() : false;\r\n        }\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        let firstRenderedItem = this.getFirstVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        let lastRenderedItem = this.getLastVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.setShouldFallback(false);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        this.backgroundImage.reset();\r\n\r\n        let jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.fillMode = Enums.FillMode.Cover;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage.parse(jsonBackgroundImage, errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            let items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                let element = createElementInstance(\r\n                    this,\r\n                    items[i],\r\n                    !this.isDesignMode(),\r\n                    errors);\r\n\r\n                if (element) {\r\n                    this.insertItemAt(element, -1, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1, false);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result = super.getResourceInformation();\r\n\r\n        if (this.backgroundImage.isValid()) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Shared.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        const minDesignTimeColumnHeight = 20;\r\n\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n\r\n            if (this.minPixelHeight) {\r\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n            }\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <Shared.SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 auto\";\r\n                renderedElement.style.width = sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"auto\";\r\n\r\n    constructor(width: ColumnWidth = \"auto\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof Shared.SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        var invalidWidth = false;\r\n\r\n        try {\r\n            this.width = Shared.SizeAndUnit.parse(jsonWidth);\r\n        }\r\n        catch (e) {\r\n            if (typeof jsonWidth === \"string\" && (jsonWidth === \"auto\" || jsonWidth === \"stretch\")) {\r\n                this.width = jsonWidth;\r\n            }\r\n            else {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n\r\n        if (invalidWidth) {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid column width:\" + jsonWidth + \" - defaulting to \\\"auto\\\"\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends StylableCardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _renderedColumns: Array<Column>;\r\n\r\n    private createColumnInstance(json: any, errors: Array<HostConfig.IValidationError>): Column {\r\n        return createCardObjectInstance<Column>(\r\n            this,\r\n            json,\r\n            [], // Forbidden types not supported for elements for now\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return !typeName || typeName === \"Column\" ? new Column() : null;\r\n            },\r\n            (typeName: string, errorType: InstanceCreationErrorType) => {\r\n                if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                    return {\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                        message: \"Element type \" + typeName + \" isn't allowed in a ColumnSet.\"\r\n                    }\r\n                }\r\n            },\r\n            errors);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedColumns = [];\r\n\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            let totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    let computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                let renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    this._renderedColumns.push(column);\r\n                }\r\n            }\r\n\r\n            return this._renderedColumns.length > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtTop()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtBottom()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[this._renderedColumns.length - 1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                let column = this.createColumnInstance(jsonColumns[i], errors);\r\n\r\n                this._columns.push(column);\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        let weightedColumns: number = 0;\r\n        let stretchedColumns: number = 0;\r\n\r\n        for (let column of this._columns) {\r\n            if (typeof column.width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (column.width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        if (action.prepareForExecution()) {\r\n            onExecuteActionHandler(action);\r\n        }\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseInputValueChangedEvent(input: Input) {\r\n    let card = input.getRootElement() as AdaptiveCard;\r\n    let onInputValueChangedHandler = (card && card.onInputValueChanged) ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\r\n\r\n    if (onInputValueChangedHandler) {\r\n        onInputValueChangedHandler(input);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: HostConfig.IValidationError, errors: Array<HostConfig.IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    this.hostConfig,\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        if (this.renderIfEmpty) {\r\n            return element;\r\n        }\r\n        else {\r\n            return element.children.length > 0 ? element : null;\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        if (this.renderedActionCount == 0) {\r\n            return false;\r\n        }\r\n        else if (this.renderedActionCount == 1) {\r\n            return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n        }\r\n        else {\r\n            return this._actionCollection.expandedAction != null;\r\n        }\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return this._actionCollection.renderedActionCount;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._actionCollection) {\r\n            this._actionCollection.validateProperties(context);\r\n        }\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"RichTextBlock\", () => { return new RichTextBlock(); });\r\n        this.registerType(\"TextRun\", () => { return new TextRun(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"ActionSet\", () => { return new ActionSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(OpenUrlAction.JsonTypeName, () => { return new OpenUrlAction(); });\r\n        this.registerType(SubmitAction.JsonTypeName, () => { return new SubmitAction(); });\r\n        this.registerType(ShowCardAction.JsonTypeName, () => { return new ShowCardAction(); });\r\n        this.registerType(ToggleVisibilityAction.JsonTypeName, () => { return new ToggleVisibilityAction(); });\r\n    }\r\n}\r\n\r\nexport interface IMarkdownProcessingResult {\r\n    didProcess: boolean;\r\n    outputHtml?: any;\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: HostConfig.Version = new HostConfig.Version(1, 2);\r\n\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n    static allowMarkForTextHighlighting: boolean = false;\r\n    static alwaysBleedSeparators: boolean = false;\r\n    static enableFullJsonRoundTrip: boolean = false;\r\n    static useBuiltInInputValidation: boolean = false;\r\n    static displayInputValidationErrors: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onInputValueChanged: (input: Input) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseError: (error: HostConfig.IValidationError) => void = null;\r\n    static onProcessMarkdown: (text: string, result: IMarkdownProcessingResult) => void = null;\r\n\r\n    static get processMarkdown(): (text: string) => string {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static set processMarkdown(value: (text: string) => string) {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\r\n        let result: IMarkdownProcessingResult = {\r\n            didProcess: false\r\n        };\r\n\r\n        if (AdaptiveCard.onProcessMarkdown) {\r\n            AdaptiveCard.onProcessMarkdown(text, result);\r\n        }\r\n        else if (window[\"markdownit\"]) {\r\n            // Check for markdownit\r\n            result.outputHtml = window[\"markdownit\"]().render(text);\r\n            result.didProcess = true;\r\n        }\r\n        else {\r\n            console.warn(\"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\")\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n    private _fallbackCard: AdaptiveCard = null;\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            let unsupportedVersion: boolean =\r\n                !this.version ||\r\n                !this.version.isValid ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onInputValueChanged: (input: Input) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n\r\n    version?: HostConfig.Version = new HostConfig.Version(1, 0);\r\n    fallbackText: string;\r\n    speak: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && !this.version) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"The version property must be specified.\"\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._fallbackCard = null;\r\n\r\n        this._cardTypeName = Utils.getStringValue(json[\"type\"]);\r\n        this.speak = Utils.getStringValue(json[\"speak\"]);\r\n\r\n        let langId = json[\"lang\"];\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = HostConfig.Version.parse(json[\"version\"], errors);\r\n\r\n        this.fallbackText = Utils.getStringValue(json[\"fallbackText\"]);\r\n\r\n        let fallbackElement = createElementInstance(\r\n            null,\r\n            json[\"fallback\"],\r\n            !this.isDesignMode(),\r\n            errors);\r\n\r\n        if (fallbackElement) {\r\n            this._fallbackCard = new AdaptiveCard();\r\n            this._fallbackCard.addItem(fallbackElement);\r\n        }\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        let renderedCard: HTMLElement;\r\n\r\n        if (this.shouldFallback() && this._fallbackCard) {\r\n            this._fallbackCard.hostConfig = this.hostConfig;\r\n\r\n            renderedCard = this._fallbackCard.render();\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return super.shouldFallback() || !this.isVersionSupported();\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontTypes: {\r\n            default: {\r\n                fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            },\r\n            monospace: {\r\n                fontFamily: \"'Courier New', Courier, monospace\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            }\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            accent: {\r\n                backgroundColor: \"#C7DEF9\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            good: {\r\n                backgroundColor: \"#CCFFCC\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            attention: {\r\n                backgroundColor: \"#FFC5B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            warning: {\r\n                backgroundColor: \"#FFE2B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nabstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n"],"sourceRoot":""}